{"version":3,"sources":["Containers/Navbar.js","Containers/Header.js","Containers/MyTextArea.js","Containers/About.js","Containers/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","src","alt","navBrand","type","id","home","about","onClick","toggler","htmlFor","defaultProps","Header","MyTextArea","useState","text","setText","style","backgroundColor","color","heading","placeholder","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","replace","trim","split","i","length","charAt","slice","join","About","marginTop","height","padding","margin","Alert","alert","role","word","lower","capitalize","message","App","setMode","setAlert","setTimeout","document","body","getElementById","href","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a1f18840.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport {\n    \n    Link\n  } from \"react-router-dom\";\n\n\nexport const Navbar = (props) => {\n    return (\n        <div>\n            <nav className= {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} border border-${props.mode==='light'?'dark':'light'}`}>\n                <div className=\"container-fluid\">\n                    <Link className=\"navbar-brand\" to=\"/\"><img src=\"./android-chrome-512x512.png\" alt=\"\" />{props.navBrand}</Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.home}</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\n                            </li>\n\n                        </ul>\n                        {/* <form className=\"d-flex\">\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                        </form> */}\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"mode\" onClick= {props.toggler} />\n                            <label className=\"form-check-label\" htmlFor=\"mode\">Enable DarkMode</label>\n                        </div>\n\n                    </div>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\n\nNavbar.propTypes = {\n    navBrand: PropTypes.string.isRequired,\n    home: PropTypes.string,\n    about: PropTypes.string,\n}\n\nNavbar.defaultProps = {\n    navBrand: \"Set Title\",\n    home: \"Set Home\",\n    about: \"Set About\"\n}","import {Navbar} from './Navbar'\n\nimport React from 'react'\n// import { Alert } from './Alert'\n\nexport const Header = (props) => {\n    return (\n        <div >\n            <Navbar navBrand = \"Text Utils\" home= \"Home\" about = \"About\" mode = {props.mode} toggler ={props.toggler}/>\n            {/* <Navbar  about = \"About\" /> */}\n            {/* <Alert alert={props.alert}/> */}\n        </div>\n    )\n}\n","import React, { useState } from 'react'\n\nexport const MyTextArea = (props) => {\n    const [text, setText] = useState(\"\");\n\n    const changingText = (event) => {\n        setText(event.target.value);\n    }\n\n    const changeUpper = () => {\n        // console.log(\"onclick change\" + text)\n        let newText = text.toUpperCase();\n        // document.getElementById('myTextBox').value = text;\n        setText(newText);\n        props.showAlert(\"Texts Changes to UperCase\", \"success\");\n    }\n    const changeLower = () => {\n        let newText = text.toLowerCase();\n        // document.getElementById('myTextBox').value = text;\n        setText(newText);\n        props.showAlert(\"Texts Changes to LowerCase\", \"success\");\n    }\n\n    const clearText = () => {\n        setText(\"\");\n        props.showAlert(\"All texts are cleared\", \"success\");\n    }\n\n    const removeExtraSpace = () => {\n        // console.log(\"Remove Extra Space\");\n        let newText = text.replace(/\\s+/g, ' ').trim();\n        setText(newText);\n        props.showAlert(\"Extra Spaces Removed\", \"success\");\n    }\n    \n    const capEachWord = ()=> {\n        let newText = text.split(\" \");\n        for(let i = 0; i < newText.length; i++) {\n            newText[i] = newText[i].charAt(0).toUpperCase() + newText[i].slice(1);\n        }\n        setText(newText.join(\" \"));\n        props.showAlert(\"Captialize Each Word\", \"success\");\n\n    }\n\n    return (\n        \n            <div className=\"container border my-3 rounded\" style={{ backgroundColor: props.mode === 'light' ? 'white' : '#262530', color: props.mode === 'light' ? 'black' : 'white' }}>\n\n                <div className=\"container my-3\">\n                    <h1>{props.heading}</h1>\n                    <div className=\"mb-3\">\n                        <textarea className=\"form-control\" placeholder=\"Enter your text here\" value={text} onChange={changingText} id=\"myTextBox\" rows=\"8\" style={{ backgroundColor: props.mode === 'light' ? 'white' : '#05041b', color: props.mode === 'light' ? 'black' : 'white' }}></textarea>\n\n                    </div>\n                    <div className=\"buttons\">\n                        <button className=\"btn btn-sm btn-primary mx-2\" onClick={changeUpper}>Change to Uppercase</button>\n                        <button className=\"btn btn-sm btn-primary mx-2\" onClick={changeLower}>Change to Lowercase</button>\n                        <button className=\"btn btn-sm btn-primary mx-2\" onClick={removeExtraSpace}>Remove Extra Spaces</button>\n                        <button className=\"btn btn-sm btn-primary mx-2\" onClick={capEachWord}>Capitalize Each Word</button>\n                        <button className=\"btn btn-sm btn-primary mx-2\" onClick={clearText}>Clear Text</button>\n\n                    </div>\n                </div>\n                <div className=\"container my-3\">\n                    <h2>Text Summary</h2>\n                    <p><b>{text === \"\" ? '0' : text.split(\" \").length}</b> words <b>{text.length}</b> characters</p>\n                    <p><b>{0.0076 * (text.split(\" \").length - 1)}</b> Minutes to read</p>\n                    <h2>Preview</h2>\n                    <p>{text.length === 0 ? \"Enter any text above the TextBox to preview\" : text}</p>\n                </div>\n            </div>\n        \n    )\n}\n","import React from 'react'\n\nexport const About = (props) => {\n    return (\n        <div className=\"container\" style={{backgroundColor: props.mode==='light'?'white':'#262530', color: props.mode==='light'?'black':'white', marginTop:\"70px\", height:\"15rem\", padding: \"1rem\"}}>\n            <h2 className=\"text-center my-3\">{props.heading}</h2>\n            <p className=\"text-center\" style={{margin:\"70px 80px 0 80px\"}}>This is a Text Utiliy web application where you can manipulate with a given text like changing every character to its case or lower case and you can also remove extra spaces.</p>\n        </div> \n        \n    )\n}\n","import React from 'react'\n\nexport const Alert = (props) => {\n    const capitalize = (word) => {\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div>\n            {props.alert === null ? <span></span> : <div>\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n                    <strong>{capitalize(props.alert.type)}</strong>:{props.alert.message}\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                </div>\n            </div>}\n        </div>    \n        \n    )\n}\n","\nimport './App.css';\nimport { Header } from './Containers/Header'\nimport { MyTextArea } from './Containers/MyTextArea';\nimport React, { useState } from 'react';\nimport {About} from './Containers/About'\nimport { Alert } from './Containers/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n  const toggler = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      showAlert(\"DarkMode Enabled\", \"success\");\n      document.body.style.backgroundColor = '#080110';\n      document.getElementById('faviconPng').href = '%PUBLIC_URL%/favicon_io1/favicon-16x16.png';\n      document.getElementById('faviconIco').href = '%PUBLIC_URL%/favicon_io1/favicon.ico';\n    }\n    else {\n      setMode('light');\n      showAlert(\"LightMode Enabled\", \"success\");\n      document.body.style.backgroundColor = 'white';\n      document.getElementById('faviconPng').href = \"%PUBLIC_URL%/favicon_io2/favicon-16x16.png\";\n      document.getElementById('faviconIco').href = \"%PUBLIC_URL%/favicon_io2/favicon.ico\";\n    }\n  }\n\n  return (\n    \n      <Router>\n        <Header mode={mode} toggler={toggler} alert={alert} />\n        <Switch>\n          <Route exact path=\"/\">\n            <Alert alert={alert} />\n            <MyTextArea heading=\"Enter the Text to analyze\" mode={mode} showAlert={showAlert} />\n          </Route>\n          <Route exact path=\"/About\">\n            <Alert alert={alert} />\n            <About heading=\"About Us\" mode={mode}></About>\n          </Route>\n        </Switch>\n      </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}